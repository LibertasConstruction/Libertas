# Python imports
from typing import List

# Project imports
from src.sigma_interface.sigma_server import SigmaServer
from src.utils import AddToken, SrchToken


class LibertasServer(object):
    """Libertas server implementation.

    Libertas uses a wildcard supporting SSE scheme internally. In addition to the security guarantees and functionality
    provided by the underlying scheme, Libertas provides Update Pattern Revealing Backward Privacy.
    """

    def __init__(
            self,
            sigma: SigmaServer[AddToken, SrchToken],
    ) -> None:
        """Initializes a Libertas server, setting the underlying server scheme that is used.

        :param sigma: The underlying SSE scheme used by this Libertas instance
        :type sigma: SigmaServer
        :returns: None
        :rtype: None
        """
        self.sigma: SigmaServer = sigma

    def build_index(
            self,
    ) -> None:
        """Sets up the Libertas server, initializing its index.

        :returns: None
        :rtype: None
        """
        self.sigma.build_index()

    def search(
            self,
            srch_token: SrchToken,
    ) -> List[int]:
        """Searches the index using a search token, resulting in encrypted results.

        :param srch_token: The search token generated by the client
        :type srch_token: SrchToken
        :returns: A list of encrypted updates
        :rtype: List[int]
        """
        return self.sigma.search(srch_token)

    def add(
            self,
            add_token: AddToken,
    ) -> None:
        """Adds an add update to the index (see utils.Update).

        :param add_token: The add token generated from the update by the client
        :type add_token: AddToken
        :returns: None
        :rtype: None
        """
        self.sigma.add(add_token)

    def delete(
            self,
            del_token: AddToken,
    ) -> None:
        """Adds an delete update to the index (see utils.Update).

        :param del_token: The delete token generated from the update by the client
        :type del_token: AddToken
        :returns: None
        :rtype: None
        """
        self.sigma.add(del_token)
